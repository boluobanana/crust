/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct CoolStruct {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_CoolStruct() {
    assert_eq!(
        ::std::mem::size_of::<CoolStruct>(),
        8usize,
        concat!("Size of: ", stringify!(CoolStruct))
    );
    assert_eq!(
        ::std::mem::align_of::<CoolStruct>(),
        4usize,
        concat!("Alignment of ", stringify!(CoolStruct))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CoolStruct>())).x as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(CoolStruct),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<CoolStruct>())).y as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(CoolStruct),
            "::",
            stringify!(y)
        )
    );
}
extern "C" {
    pub fn cool_function(i: ::std::os::raw::c_int, c: ::std::os::raw::c_char, cs: *mut CoolStruct);
}
